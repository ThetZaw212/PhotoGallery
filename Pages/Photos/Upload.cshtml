@page
@model PhotoGallery.Pages.Photos.UploadModel
@using Microsoft.AspNetCore.Authorization

@{
    Layout = null;
    ViewData["Title"] = "Upload Photo";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PhotoGallery.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/select2/css/select2.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

    <style>
        .upload-card {
            max-width: 600px;
            margin: auto;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
        }

        .preview-img {
            max-width: 100%;
            max-height: 250px;
            margin-top: 1rem;
            border-radius: 0.5rem;
            object-fit: cover;
        }

        .form-label {
            font-weight: 500;
        }
    </style>
</head>
<body>
    @await Html.PartialAsync("~/Pages/Shared/_GlobalPopup.cshtml")
    <div class="container py-5">
        <div class="upload-card bg-white">
            <h3 class="text-center mb-4">
                <i class="fas fa-upload"></i> Upload a New Photo
            </h3>

            <form id="uploadForm">
                <div class="mb-3">
                    <label class="form-label">Title</label>
                    <input id="photoTitle" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Description</label>
                    <textarea id="photoDescription" class="form-control" rows="3"></textarea>
                </div>
                <div class="mb-3">
                    <label class="form-label">Location</label>
                    <input id="photoLocation" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Tags</label>
                    <select id="tagSelect" class="form-control" multiple="multiple"></select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Select Photo</label>
                    <input type="file" id="uploadFile" class="form-control" accept="image/png, image/jpeg" onchange="previewImage(event)" />
                    <img id="preview" class="preview-img d-none" />
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="fas fa-cloud-upload-alt me-2"></i> Upload
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/select2/js/select2.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        if (typeof window.jQuery === 'undefined') {
            console.error('jQuery is not loaded. Ensure ~/lib/jquery/dist/jquery.min.js exists under wwwroot.');
        } else {
            (function ($) {
                if (!$.fn.select2) {
                    console.error('Select2 is not loaded. Ensure ~/select2/js/select2.min.js exists under wwwroot.');
                } else {
                    $('#tagSelect').select2({
                        placeholder: "Select or type tags",
                        tags: true,
                        ajax: {
                            url: '/api/photos/tag',
                            dataType: 'json',
                            processResults: function (data) {
                                const tags = data.data || [];
                                return {
                                    results: tags.map(tag => ({ id: tag.name, text: tag.name }))
                                };
                            }
                        }
                    });
                }

                const ALLOWED_TYPES = ['image/png', 'image/jpeg'];
                const MAX_FILE_SIZE = 5 * 1024 * 1024; // allow 5 MB

                function validateFile(file) {
                    if (!file) return { ok: false, message: 'No file selected.' };

                    if (!ALLOWED_TYPES.includes(file.type)) {
                        return { ok: false, message: 'Invalid file type. Only PNG and JPEG images are allowed.' };
                    }

                    if (file.size > MAX_FILE_SIZE) {
                        return { ok: false, message: 'File is too large. Maximum allowed size is 5 MB.' };
                    }

                    return { ok: true };
                }

                // Handle form submit
                $('#uploadForm').on('submit', function (e) {
                    e.preventDefault();

                    const title = $('#photoTitle').val().trim();
                    const description = $('#photoDescription').val().trim();
                    const location = $('#photoLocation').val().trim();
                    const tags = $('#tagSelect').val();
                    const file = $('#uploadFile')[0].files[0];

                    // --- Validate all fields ---
                    if (!title) { showGlobalPopup('Validation', 'Title is required.', 'error', 2000); return; }
                    if (!description) { showGlobalPopup('Validation', 'Description is required.', 'error', 2000); return; }
                    if (!location) { showGlobalPopup('Validation', 'Location is required.', 'error', 2000); return; }
                    if (!tags || tags.length === 0) { showGlobalPopup('Validation', 'Please select at least one tag.', 'error', 4000); return; }
                    if (!file) { showGlobalPopup('Validation', 'Please select a photo.', 'error', 2000); return; }

                    const validation = validateFile(file);
                     if (!validation.ok) {
                        showGlobalPopup('Invalid file', validation.message, 'error', 2000);
                        return;
                    }

                    const formData = new FormData();
                    formData.append('File', file);
                    formData.append('Title', $('#photoTitle').val());
                    formData.append('Description', $('#photoDescription').val());
                    formData.append('Location', $('#photoLocation').val());
                    formData.append('Tags', $('#tagSelect').val()?.join(',') || '');

                    $.ajax({
                        url: '/api/photos/upload',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            showGlobalPopup('Success', 'Photo uploaded successfully.', 'success', 2000, );
                            window.location.href = '/Photos/List';
                        },
                        error: function (xhr) {
                            var msg = xhr && xhr.responseText ? xhr.responseText : 'Failed to upload photo';
                            showGlobalPopup('Upload failed', msg, 'error', 4000);
                        }
                    });
                });

                // Preview image before upload
                window.previewImage = function (event) {
                    const input = event.target;
                    const preview = document.getElementById('preview');
                    const file = input.files && input.files[0];

                    if (!file) {
                        preview.classList.add('d-none');
                        preview.src = '';
                        return;
                    }

                    const validation = validateFile(file);
                    if (!validation.ok) {
                        alert(validation.message);
                        // clear the invalid file selection
                        input.value = '';
                        preview.classList.add('d-none');
                        preview.src = '';
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function (e) {
                        preview.src = e.target.result;
                        preview.classList.remove('d-none');
                    };
                    reader.readAsDataURL(file);
                };
            })(jQuery);
        }
    </script>
</body>
</html>